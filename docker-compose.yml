version: "3.3"

services:

  social-network:
    build: .
    container_name: social-network
    restart: always
    environment:
      FLASK_APP: cli_app.py
      ENV: ${ENV}
      SECRET_KEY: ${SECRET_KEY}
      DB_HOST: ${DB_HOST}
      SLAVE_HOST: ${SLAVE_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${MYSQL_USER}
      DB_PASSWORD: ${MYSQL_PASSWORD}
      DB_DATABASE: ${MYSQL_DATABASE}
      TARANTOOL_HOST: ${TARANTOOL_HOST}
      TARANTOOL_PORT: ${TARANTOOL_PORT}
      TARANTOOL_USER_NAME: ${TARANTOOL_USER_NAME}
      TARANTOOL_USER_PASSWORD: ${TARANTOOL_USER_PASSWORD}
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}
      WEB_SOCKET_URL: ${WEB_SOCKET_URL}
      NOTIFICATIONS_BROKER: ${NOTIFICATIONS_BROKER}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      CHAT_SERVICE_URL: ${CHAT_SERVICE_URL}
    volumes:
      - "./logs:/usr/src/logs"
      - "./app:/usr/src/app"
      - "./tests:/usr/src/tests"
    networks:
      - shared
    ports:
      - ${SOCIAL_NETWORK_PUBLIC_PORT}:8000
  db:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    volumes:
      - "./volumes/db:/var/lib/mysql"
      - "./volumes/db_dump:/dump"
      - "./conf/mysql/master.cnf:/etc/mysql/conf.d/my.cnf"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    networks:
      - shared
    ports:
      - ${DB_PUBLIC_PORT}:3306
  slave:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    volumes:
      - "./volumes/slave:/var/lib/mysql"
      - "./volumes/slave_dump:/dump"
      - "./conf/mysql/slave.cnf:/etc/mysql/conf.d/my.cnf"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    networks:
      - shared
    ports:
      - ${SLAVE_PUBLIC_PORT}:3306
  slave2:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    volumes:
      - "./volumes/slave2:/var/lib/mysql"
      - "./volumes/slave_dump:/dump"
      - "./conf/mysql/slave2.cnf:/etc/mysql/conf.d/my.cnf"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    networks:
      - shared
    ports:
      - ${SLAVE2_PUBLIC_PORT}:3306
  tarantool:
    image: tarantool/tarantool
    container_name: tarantool
    volumes:
      - "./volumes/tarantool:/var/lib/tarantool"
      - "./conf/tarantool:/opt/tarantool"
    environment:
      TARANTOOL_USER_NAME: ${TARANTOOL_USER_NAME}
      TARANTOOL_USER_PASSWORD: ${TARANTOOL_USER_PASSWORD}
    networks:
      - shared
  broker:
    image: redis:latest
    restart: always
    container_name: broker
    volumes:
      - ./volumes/broker/:/data
    networks:
      - shared
  celery:
    build: .
    command: celery worker -A app.app.celery
    restart: always
    environment:
      FLASK_APP: cli_app.py
      ENV: ${ENV}
      SECRET_KEY: ${SECRET_KEY}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${MYSQL_USER}
      DB_PASSWORD: ${MYSQL_PASSWORD}
      DB_DATABASE: ${MYSQL_DATABASE}
      TARANTOOL_HOST: ${TARANTOOL_HOST}
      TARANTOOL_PORT: ${TARANTOOL_PORT}
      TARANTOOL_USER_NAME: ${TARANTOOL_USER_NAME}
      TARANTOOL_USER_PASSWORD: ${TARANTOOL_USER_PASSWORD}
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}
      NOTIFICATIONS_BROKER: ${NOTIFICATIONS_BROKER}
      EXCHANGE_NAME: ${EXCHANGE_NAME}
    depends_on:
      - social-network
      - broker
    volumes:
      - "./app:/usr/src/app"
    networks:
      - shared
  ws-app:
    build: ./app_ws
    container_name: ws-app
    restart: always
    environment:
      ENV: ${ENV}
      DB_HOST: ${DB_HOST}
      SLAVE_HOST: ${SLAVE_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${MYSQL_USER}
      DB_PASSWORD: ${MYSQL_PASSWORD}
      DB_DATABASE: ${MYSQL_DATABASE}
      NOTIFICATIONS_BROKER: ${NOTIFICATIONS_BROKER}
      EXCHANGE_NAME: ${EXCHANGE_NAME}
    volumes:
      - "./app_ws/app:/usr/src/app"
    networks:
      - shared
    ports:
      - ${WS_APP_PUBLIC_PORT}:8000

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    volumes:
      - ./volumes/rabbitmq/data/:/var/lib/rabbitmq/
      - ./volumes/rabbitmq/logs/:/var/log/rabbitmq/
    environment:
      RABBITMQ_ERLANG_COOKIE: ${RABBITMQ_ERLANG_COOKIE}
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - shared

  mysql-manager-1:
    image: mysql/mysql-cluster
    networks:
      - shared
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ./conf/mysql_cluster/my.cnf:/etc/my.cnf
      - ./conf/mysql_cluster/mysql-cluster.cnf:/etc/mysql-cluster.cnf
      - ./volumes/mysql_cluster/manager:/var/lib/mysql
    command: ndb_mgmd

  data-node-1:
    image: mysql/mysql-cluster
    networks:
      - shared
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ./conf/mysql_cluster/my.cnf:/etc/my.cnf
      - ./conf/mysql_cluster/mysql-cluster.cnf:/etc/mysql-cluster.cnf
      - ./volumes/mysql_cluster/node1:/var/lib/mysql
    command: ndbd

  data-node-2:
    image: mysql/mysql-cluster
    networks:
      - shared
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ./conf/mysql_cluster/my.cnf:/etc/my.cnf
      - ./conf/mysql_cluster/mysql-cluster.cnf:/etc/mysql-cluster.cnf
      - ./volumes/mysql_cluster/node2:/var/lib/mysql
    command: ndbd

  dialogs-db:
    image: mysql/mysql-cluster
    networks:
      - shared
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ./conf/mysql_cluster/my.cnf:/etc/my.cnf
      - ./conf/mysql_cluster/mysql-cluster.cnf:/etc/mysql-cluster.cnf
      - ./volumes/mysql_cluster/mysql:/var/lib/mysql
    command: mysqld

  dialogs-app:
    build: ./app_dialogs
    container_name: dialogs-app
    restart: always
    environment:
      FLASK_APP: cli_app.py
      ENV: ${ENV}
      SECRET_KEY: ${SECRET_KEY}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${MYSQL_USER}
      DB_PASSWORD: ${MYSQL_PASSWORD}
      DB_DATABASE: ${MYSQL_DATABASE}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      CHAT_SERVICE_URL: ${CHAT_SERVICE_URL}
    volumes:
      - "./app_dialogs/app:/usr/src/app"
    networks:
      - shared
    ports:
      - ${DIALOGS_APP_PUBLIC_PORT}:8000

networks:
  shared:
    driver: bridge
